/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package faktura;

import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar;
import java.util.GregorianCalendar;

/**
 *
 * @author radicalb
 */
public class MesecniIzpis extends javax.swing.JFrame implements Printable {

    /**
     * Creates new form MesecniIzpis
     */
    public MesecniIzpis() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setTitle("Mesečni izpis");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jButton1.setText("Natisni");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Številka računa", "Vrednost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Mesec:");

        jLabel2.setText("Leto:");

        jButton2.setText("Izpis");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Šifra", "Naziv", "Količina", "Davek", "Vrednost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel3.setText("0");

        jLabel4.setText("0");

        jLabel5.setText("Skupaj DDV:");

        jLabel6.setText("Skupaj:");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel7.setText("Seznam računov:");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel8.setText("Seznam izdelkov:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3))))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private DefaultTableModel model, model2;    
    
    public int print (Graphics graphics, PageFormat pageFormat, int pageIndex) {
        
        if (pageIndex > 0) { /* We have only one page, and 'page' is zero-based */
            return NO_SUCH_PAGE;
        }
        
        Font fN = new Font("SansSerif", Font.PLAIN, 10);
        Font fBtitle = new Font("SansSerif", Font.BOLD, 16);
          
        Graphics2D graphics2D = (Graphics2D) graphics;
        graphics.setFont(fN);
        FontMetrics fNm = graphics.getFontMetrics(fN);
        
        String printerTip="printer80mm";
        if(printerTip=="A4"){
            int sirinaPpx=595;
            
            graphics2D.drawString("Vinogradnik", 595-50-fNm.stringWidth("Davčna številka: 27273881"), 45);
            graphics2D.drawString("Žarn Jožef s.p.", 595-50-fNm.stringWidth("Davčna številka: 27273881"), 60);
            graphics2D.drawString("Gorjanska cesta 17", 595-50-fNm.stringWidth("Davčna številka: 27273881"), 75);
            graphics2D.drawString("8311 Kostanjevica na Krki", 595-50-fNm.stringWidth("Davčna številka: 27273881"), 90);
            graphics2D.drawString("Davčna številka: 27273881", 595-50-fNm.stringWidth("Davčna številka: 27273881"), 105);
        
            graphics2D.drawLine(20, 115, 595-20, 115);
            graphics2D.drawLine(20, 116, 595-20, 116);
        
            int h1=140;
            graphics.setFont(fBtitle);
            graphics2D.drawString("IZPIS DOKUMENTOV ZA: "+jComboBox1.getSelectedItem().toString()+" "+jComboBox2.getSelectedItem().toString(), 50, h1);
            graphics.setFont(fN);
            
            Calendar now = GregorianCalendar.getInstance();
            int ura=(now.get(Calendar.AM_PM)==1)?(now.get(Calendar.HOUR)+12):(now.get(Calendar.HOUR));
            ura=ura%24;
            graphics2D.drawString("Izpisano: "+now.get(Calendar.DAY_OF_MONTH)+"."+(now.get(Calendar.MONTH)+1)+"."+now.get(Calendar.YEAR)+" ob "+ura+":"+now.get(Calendar.MINUTE), 50, h1+=15);
            
            graphics2D.drawLine(20, h1+=10, 595-20, h1);
           
            
            for(int i=0;i<model.getRowCount();i++){
               h1+=15;
               graphics2D.drawString("RAČUN",50,h1);  
               graphics2D.drawString(jTable1.getValueAt(i, 0).toString(),(sirinaPpx/2)-100,h1);  
               graphics2D.drawString(jTable1.getValueAt(i, 1).toString(),sirinaPpx-100,h1); 
            }
            
            graphics2D.drawLine(20, h1+=10, sirinaPpx-20, h1);
            
            for(int i=0;i<model2.getRowCount();i++){
               h1+=15;
               graphics2D.drawString(jTable2.getValueAt(i, 1).toString(),50,h1);  
               graphics2D.drawString(jTable2.getValueAt(i, 2).toString()+"x",(sirinaPpx/2)-100,h1);  
               graphics2D.drawString(jTable2.getValueAt(i, 4).toString(),sirinaPpx-100,h1); 
            }
            
            graphics2D.drawLine(20, h1+=10, sirinaPpx-20, h1);
            
            graphics2D.drawString("Skupaj DDV: "+jLabel3.getText(),sirinaPpx-50-fNm.stringWidth("Skupaj DDV: "+jLabel3.getText()),h1+=15);  
            graphics2D.drawString("Skupaj: "+jLabel4.getText(),sirinaPpx-50-fNm.stringWidth("Skupaj DDV: "+jLabel3.getText()),h1+=15);  
            
            
        }else if(printerTip=="printer80mm"){
            
            int sirinaPmm=80;
            int sirinaPpx=(int)(sirinaPmm*2.83);
            
            int h1=30;
            graphics2D.drawString("Vinogradnik", 10, h1);
            graphics2D.drawString("Žarn Jožef s.p.", 10, h1+=15);
            graphics2D.drawString("Gorjanska cesta 17",10, h1+=15);
            graphics2D.drawString("8311 Kostanjevica na Krki", 10, h1+=15);
            graphics2D.drawString("Davčna številka: 27273881", 10, h1+=15);
            
            graphics2D.drawString("IZPIS DOKUMENTOV ZA: "+jComboBox1.getSelectedItem().toString()+" "+jComboBox2.getSelectedItem().toString(), 10, h1+=25);
            Calendar now = GregorianCalendar.getInstance();
            int ura=(now.get(Calendar.AM_PM)==1)?(now.get(Calendar.HOUR)+12):(now.get(Calendar.HOUR));
            ura=ura%24;
            graphics2D.drawString("Izpisano: "+now.get(Calendar.DAY_OF_MONTH)+"."+(now.get(Calendar.MONTH)+1)+"."+now.get(Calendar.YEAR)+" ob "+ura+":"+now.get(Calendar.MINUTE), 10, h1+=15);
            
            graphics2D.drawLine(5, h1+=10, sirinaPpx-5, h1);
           
            
            for(int i=0;i<model.getRowCount();i++){
               h1+=15;
               graphics2D.drawString("RAČUN",10,h1);  
               graphics2D.drawString(jTable1.getValueAt(i, 0).toString(),sirinaPpx-150,h1);  
               graphics2D.drawString(jTable1.getValueAt(i, 1).toString(),sirinaPpx-60,h1); 
            }
            
            graphics2D.drawLine(5, h1+=10, sirinaPpx-5, h1);
            
            for(int i=0;i<model2.getRowCount();i++){
               h1+=15;
               if(model2.getValueAt(i, 1).toString().length()>12){
                   graphics2D.drawString(jTable2.getValueAt(i, 1).toString().substring(0,11)+".",10,h1);  
               }else{
                   graphics2D.drawString(jTable2.getValueAt(i, 1).toString(),10,h1);
               }                                
               graphics2D.drawString(jTable2.getValueAt(i, 2).toString()+"x",sirinaPpx-150,h1);  
               graphics2D.drawString(jTable2.getValueAt(i, 4).toString(),sirinaPpx-60,h1); 
            }
            
            graphics2D.drawLine(5, h1+=10, sirinaPpx-5, h1);
            
            graphics2D.drawString("Skupaj DDV:",10,h1+=15);  
            graphics2D.drawString(jLabel3.getText(),sirinaPpx-60,h1);
            graphics2D.drawString("Skupaj:",10,h1+=15);  
            graphics2D.drawString(jLabel4.getText(),sirinaPpx-60,h1); 
            
            h1+=15;
            graphics2D.drawLine(0, h1, sirinaPpx, h1);
        }
        
            
        return (PAGE_EXISTS);
   }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setLocationRelativeTo(null); //centriram okno
        
        model=new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Številka", "Vrednost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jTable1.setModel(model);
        
        model2=new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Šifra", "Naziv","Količina","Davek","Vrednost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jTable2.setModel(model2);
        
        naloziLetainMesece();
    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        prikaziRacune();
        jButton1.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        PrinterJob printJob = PrinterJob.getPrinterJob ();
        
        printJob.setJobName("Mesecni_izpis_"+jComboBox1.getSelectedItem().toString()+"_"+jComboBox2.getSelectedItem().toString());
        
        int pageW=200;
        int pageH=800;        
        String printerTip="printer80mm";
        if(printerTip=="printer80mm"){
            //paper80mm
            pageW=(int)(80*2.83);
            pageH=140+(jTable1.getRowCount()*15)+10+(jTable2.getRowCount()*15)+10+46;
        }else if(printerTip=="A4"){
            pageW=595;
            pageH=842;
        }
        Paper paper = new Paper();
        paper.setSize(pageW, pageH);
        paper.setImageableArea(0,0,pageW, pageH);
        PageFormat pf=new PageFormat();
        pf.setPaper(paper);
        pf.setOrientation(PageFormat.PORTRAIT);
        Book pBook = new Book();
        pBook.append(this, pf,1);
        printJob.setPageable(pBook);    
        //--- Show a print dialog to the Faktura.user. If the Faktura.user
        //--- clicks the print button, then print, otherwise
        //--- cancel the print job
        if (printJob.printDialog()) {
           try {
              printJob.print();
           } catch (Exception PrintException) {
              PrintException.printStackTrace();
           }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void prikaziRacune(){
        while(jTable1.getRowCount()>0){
            model.removeRow(0);
        }
        while(jTable2.getRowCount()>0){
            model2.removeRow(0);
        }
        //model.
            try{

                java.sql.Driver d = null;
                java.sql.Connection c = null;
                java.sql.Statement s,sa= null;
                java.sql.ResultSet rs,rsa= null;
            
                try {
                    c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
                    System.out.println ("Connection established.");
                }
                catch (java.sql.SQLException e) {
                    System.out.println ("Unable to establish a connection through the driver manager.");
                }
            
            
                s = c.createStatement ();
                String SQLQuery1="select nakupid from nakup where (mesecid_fk="+(jComboBox1.getSelectedIndex()+1)+" AND leto="+jComboBox2.getSelectedItem().toString()+");";
                System.out.println(SQLQuery1);
                rs = s.executeQuery (SQLQuery1);
                
                while(rs.next()){
                    model.insertRow(jTable1.getRowCount(),new String[]{rs.getString("nakupid"),""});
                }
                
                for(int i=0;i<jTable1.getRowCount();i++){
                                   
                    java.sql.Statement s2 = c.createStatement ();
                    String SQLQuery2="select nakupid_fk, SUM((kolicina*((cena.vrednost+(cena.vrednost*davek.stopnja/100))))-((kolicina*((cena.vrednost+(cena.vrednost*davek.stopnja/100))))*popust/100)) as vrednostbrezpopusta from nakup_izdelek INNER JOIN cena ON nakup_izdelek.cenaid_fk=cena.cenaid INNER JOIN davek ON nakup_izdelek.davekid_fk=davek.davekid where nakupid_fk='"+model.getValueAt(i, 0) +"' GROUP BY nakupid_fk;";
                    System.out.println(SQLQuery2);
                    java.sql.ResultSet rs2 = s2.executeQuery (SQLQuery2);
                    rs2.next();
                    
                    float skupajF=(float)Math.round(rs2.getFloat("vrednostbrezpopusta") * 100) / 100;
                    String skupajS=Float.toString(skupajF)+"00";
                    skupajS=skupajS.substring(0, skupajS.indexOf('.')+3);
                    skupajS=skupajS.replace('.',',');
                    //treba še prej formatirat izpis številk
                    model.setValueAt(skupajS, i, 1);
    
                }
                
                sa = c.createStatement ();
                String SQLQuery3="SELECT DISTINCT(nakup_izdelek.izdelekid_fk) FROM nakup_izdelek INNER JOIN nakup ON nakup.nakupid=nakup_izdelek.nakupid_fk where(mesecid_fk="+(jComboBox1.getSelectedIndex()+1)+" AND leto="+jComboBox2.getSelectedItem().toString()+");";
                System.out.println(SQLQuery3);
                rsa = sa.executeQuery (SQLQuery3);
                
                while(rsa.next()){
                    model2.insertRow(jTable2.getRowCount(),new String[]{rsa.getString("izdelekid_fk"),"","","",""});
                }
                
                float vseSkupaj=0;
                float brezDavkaVseSkupaj=0;
                for(int i=0;i<jTable2.getRowCount();i++){
                                   
                    java.sql.Statement s2 = c.createStatement ();
                    String SQLQuery2="select izdelekid_fk, izdelek.naziv,SUM((nakup_izdelek.kolicina*cena.vrednost)-((nakup_izdelek.kolicina*cena.vrednost)*popust/100)) as vrednostbrezdavka ,SUM(nakup_izdelek.kolicina) as  kolicinaskupaj, davek.stopnja, SUM((nakup_izdelek.kolicina*((cena.vrednost+(cena.vrednost*davek.stopnja/100))))-((nakup_izdelek.kolicina*((cena.vrednost+(cena.vrednost*davek.stopnja/100))))*popust/100)) as vrednostspopustom from nakup_izdelek INNER JOIN nakup ON nakup.nakupid=nakup_izdelek.nakupid_fk INNER JOIN izdelek ON izdelek.izdelekid=nakup_izdelek.izdelekid_fk  INNER JOIN cena ON nakup_izdelek.cenaid_fk=cena.cenaid INNER JOIN davek ON nakup_izdelek.davekid_fk=davek.davekid where (izdelekid_fk='"+model2.getValueAt(i, 0) +"' AND mesecid_fk="+(jComboBox1.getSelectedIndex()+1)+" AND leto="+jComboBox2.getSelectedItem().toString()+") GROUP BY izdelekid_fk,stopnja, izdelek.naziv;";
                    System.out.println(SQLQuery2);
                    java.sql.ResultSet rs2 = s2.executeQuery (SQLQuery2);
                    if(rs2.isBeforeFirst()){
                        rs2.next();
                        
                        model2.setValueAt(rs2.getString("naziv"), i, 1);
                        model2.setValueAt(rs2.getString("kolicinaskupaj"), i, 2);
                    
                        float skupajF=(float)Math.round(rs2.getFloat("vrednostspopustom") * 100) / 100;
                        String skupajS=Float.toString(skupajF)+"00";
                        skupajS=skupajS.substring(0, skupajS.indexOf('.')+3);
                        skupajS=skupajS.replace('.',',');
                        //treba še prej formatirat izpis številk
                        model2.setValueAt(skupajS, i, 4);
                        
                        Float davekF=skupajF-rs2.getFloat("vrednostbrezdavka");
                        davekF=(float)Math.round(davekF * 100) / 100;
                        String davekS=Float.toString(davekF)+"00";
                        davekS=davekS.substring(0, davekS.indexOf('.')+3);
                        davekS=davekS.replace('.',',');
                        if(rs2.getFloat("stopnja")!=0){
                            model2.setValueAt(davekS+"("+rs2.getString("stopnja")+"%)", i, 3);
                        }else{
                            model2.setValueAt("0%",i,3);
                        }
                        
                        vseSkupaj+=skupajF;
                        brezDavkaVseSkupaj+=rs2.getFloat("vrednostbrezdavka");
                    }
                }
                float skupajFormaterF=(float)Math.round(vseSkupaj * 100) / 100;
                String skupajFormaterS=Float.toString(skupajFormaterF)+"00";
                skupajFormaterS=skupajFormaterS.substring(0, skupajFormaterS.indexOf('.')+3);
                skupajFormaterS=skupajFormaterS.replace('.',',');
                jLabel4.setText(""+skupajFormaterS);
                
                skupajFormaterF=(float)Math.round((vseSkupaj-brezDavkaVseSkupaj) * 100) / 100;
                skupajFormaterS=Float.toString(skupajFormaterF)+"00";
                skupajFormaterS=skupajFormaterS.substring(0, skupajFormaterS.indexOf('.')+3);
                skupajFormaterS=skupajFormaterS.replace('.',',');
                jLabel3.setText(""+skupajFormaterS);
                
                c.close();
            
            } catch (SQLException ex) {
                Logger.getLogger(GlavnoOkno.class.getName()).log(Level.SEVERE, null, ex);
            }
    
    }
    
    private void naloziLetainMesece(){
    
            try{

                java.sql.Driver d = null;
                java.sql.Connection c = null;
                java.sql.Statement s,s2 = null;
                java.sql.ResultSet rs,rs2 = null;
            
                try {
                    c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
                    System.out.println ("Connection established.");
                }
                catch (java.sql.SQLException e) {
                    System.out.println ("Unable to establish a connection through the driver manager.");
                }
            
            
                s = c.createStatement ();
                rs = s.executeQuery ("select DISTINCT leto from nakup");
                
                jComboBox2.removeAllItems();
                if(rs.isBeforeFirst()){
                    while(rs.next()){
                        jComboBox2.addItem(rs.getString("leto"));
                    }
                }else{
                    jComboBox2.addItem("2012");
                }

                s2 = c.createStatement ();
                rs2 = s2.executeQuery ("select mesec_naziv FROM mesec ORDER BY mesecid asc");
                
                jComboBox1.removeAllItems();
                while(rs2.next()){
                    jComboBox1.addItem(rs2.getString("mesec_naziv"));
                }
                
                c.close();
            
            } catch (SQLException ex) {
                Logger.getLogger(GlavnoOkno.class.getName()).log(Level.SEVERE, null, ex);
            }
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MesecniIzpis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MesecniIzpis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MesecniIzpis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MesecniIzpis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MesecniIzpis().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
