/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package faktura;

import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author radicalb
 */
public class UrediIzdelek extends javax.swing.JFrame {

    /**
     * Creates new form DodajIzdelek
     */
    public UrediIzdelek() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox();

        setTitle("Uredi podatke o izdelku");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Naziv:");

        jLabel2.setText("Količina:");

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });

        jLabel3.setText("EM:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "nalagam ..." }));

        jLabel4.setText("Cena brez DDV:");

        jButton1.setText("Dodaj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Odstrani");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
        });

        jLabel5.setText("DDV(%):");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "nalagam ..." }));

        jButton3.setText("Shrani spremembe");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "nalagam ..." }));
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addGap(0, 164, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton3))))
                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String cena;
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setLocationRelativeTo(null); //centriram okno
        naloziVse();
    }//GEN-LAST:event_formWindowOpened

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if((!jTextField2.getText().isEmpty())&&(!jTextField3.getText().isEmpty())){
            if(shraniSpremembe()){
                GlavnoOkno.aliNalozimVse=true;
                JOptionPane.showMessageDialog(rootPane, "Izdelek uspešno posodobljen.");
            }else{
                JOptionPane.showMessageDialog(rootPane, "Izdelka ni bilo mogoče posodobiti!");
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Prosimo izpolnite vsa polja!");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
        if(GlavnoOkno.isNumeric(jTextField2.getText())){
            return;
        }else{
            jTextField2.setText(jTextField2.getText().substring(0, jTextField2.getText().length()-1));
        }
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        // TODO add your handling code here:
        if(GlavnoOkno.isNumeric(jTextField3.getText())){
            return;
        }else{
            jTextField3.setText(jTextField3.getText().substring(0, jTextField3.getText().length()-1));
        }
    }//GEN-LAST:event_jTextField3KeyReleased

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        // TODO add your handling code here:
        if((jComboBox3.getItemCount()>1)&&(evt.getStateChange()==ItemEvent.SELECTED)){
            naloziPodatkeOIzdelku(jComboBox3.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(odstraniEm()){
            JOptionPane.showMessageDialog(rootPane, "EM uspešno odstranjen.");
        }else{
            JOptionPane.showMessageDialog(rootPane, "Napaka:Enote/mere ni bilo mogoče odstraniti!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dodajEm();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    private void dodajEm(){
        String novEm=JOptionPane.showInputDialog("Vnesite naziv novega polja EM");
        
        if(!(Faktura.notEmpty(novEm))){
            return;
        }
        
        try{

            java.sql.Driver d = null;
            java.sql.Connection c = null;
            java.sql.Statement s = null;
            Boolean isBad = true;
            
            try {
              c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
              System.out.println ("Connection established.");
            }
            catch (java.sql.SQLException e) {
              System.out.println ("Unable to establish a connection through the driver manager.");
            }
            
            s = c.createStatement ();
            isBad = s.execute("INSERT INTO em(mera) VALUES('"+novEm+"')");
            
            if(!isBad){
                jComboBox1.addItem(novEm);    
            }else{
                JOptionPane.showMessageDialog(rootPane, "Napaka:Enote/mere ni bilo mogoče dodati!");
            }
            
            
           
            c.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(GlavnoOkno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private boolean odstraniEm(){
    try{

            java.sql.Driver d = null;
            java.sql.Connection c = null;
            java.sql.Statement s = null;
            java.sql.ResultSet rs = null;
            
            try {
                c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
                System.out.println ("Connection established.");
            }catch (java.sql.SQLException e) {
                System.out.println ("Unable to establish a connection through the driver manager.");
            }
            
            s = c.createStatement ();
            String SQLQuery="DELETE FROM em WHERE mera='"+jComboBox1.getSelectedItem().toString()+"'";
            boolean isBad = s.execute(SQLQuery);
            jComboBox1.removeItemAt(jComboBox1.getSelectedIndex());
            
            c.close();
            return !isBad;
        } catch (SQLException ex) {
            Logger.getLogger(PregledRacunov.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }
    
    private boolean shraniSpremembe(){
        try{

            java.sql.Driver d = null;
            java.sql.Connection c = null;
            java.sql.Statement s,s2 = null;
            
            try {
                c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
                System.out.println ("Connection established.");
            }catch (java.sql.SQLException e) {
                System.out.println ("Unable to establish a connection through the driver manager.");
                return false;
            }
            
            boolean isBad=true;
            
            if(!(cena.equals(jTextField3.getText()))){
                s = c.createStatement ();
                String SQLQuery="INSERT INTO cena VALUES("
                    +null+",'"
                    +jTextField3.getText().replace(',', '.')
                    +"');";
                System.out.println(SQLQuery);
                isBad=s.execute(SQLQuery);
            
                if(isBad==true){
                    System.out.println("*****************:NAPAKA:Cena ni bila dodana!!!");
                }
            
            
                s2 = c.createStatement ();
                SQLQuery="UPDATE izdelek SET "
                    +"kolicina='"+jTextField2.getText().replace(',', '.') +"',"
                    +"emid_fk="+"(SELECT EMID FROM EM where mera='"+jComboBox1.getSelectedItem().toString()+"'),"
                    +"cenaid_fk="+"(SELECT MAX(cenaid) FROM cena),"
                    +"davekid_fk="+"(SELECT davekid FROM davek where stopnja='"+jComboBox2.getSelectedItem().toString()+"')"
                    +" WHERE izdelek.naziv='"+jComboBox3.getSelectedItem().toString()
                    + "';";
                System.out.println(SQLQuery);
                isBad=s2.execute(SQLQuery);
            }else{
                s2 = c.createStatement ();
                String SQLQuery="UPDATE izdelek SET "
                    +"kolicina='"+jTextField2.getText().replace(',', '.')+"',"
                    +"emid_fk="+"(SELECT EMID FROM EM where mera='"+jComboBox1.getSelectedItem().toString()+"'),"
                    +"cenaid_fk="+"(SELECT cenaid FROM cena where cena.vrednost='"+jTextField3.getText().replace(',', '.') +"'),"
                    +"davekid_fk="+"(SELECT davekid FROM davek where stopnja='"+jComboBox2.getSelectedItem().toString()+"')"
                    +" WHERE izdelek.naziv='"+jComboBox3.getSelectedItem().toString()
                    + "';";
                System.out.println(SQLQuery);
                isBad=s2.execute(SQLQuery);
            }
            c.close();
            return !isBad;
            
        } catch (SQLException ex) {
            Logger.getLogger(PregledRacunov.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        } 
    }
    
    private void naloziVse(){
    
        try{

            java.sql.Driver d = null;
            java.sql.Connection c = null;
            java.sql.Statement s,s2,s3 = null;
            java.sql.ResultSet rs,rs2,rs3 = null;
            
            try {
                c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
                System.out.println ("Connection established.");
            }catch (java.sql.SQLException e) {
                System.out.println ("Unable to establish a connection through the driver manager.");
            }
            
            s = c.createStatement ();
            String SQLQuery="select * from em";
            rs = s.executeQuery(SQLQuery);
            jComboBox1.removeAllItems();
            
            while(rs.next()){
                jComboBox1.addItem(rs.getString("mera"));
            }
            
            s2 = c.createStatement ();
            SQLQuery="select * from davek";
            rs2 = s2.executeQuery(SQLQuery);
            jComboBox2.removeAllItems();
            
            while(rs2.next()){
                jComboBox2.addItem(rs2.getString("stopnja"));
            }
            
            s3 = c.createStatement ();
            SQLQuery="select * from izdelek";
            rs3 = s3.executeQuery(SQLQuery);
            jComboBox3.removeAllItems();
            
            while(rs3.next()){
                jComboBox3.addItem(rs3.getString("naziv"));
            }

            c.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(PregledRacunov.class.getName()).log(Level.SEVERE, null, ex);
        } 
    
        naloziPodatkeOIzdelku(jComboBox3.getSelectedItem().toString());
    }
    
    private void naloziPodatkeOIzdelku(String nazivIzdelka){
    
        try{

            java.sql.Driver d = null;
            java.sql.Connection c = null;
            java.sql.Statement s= null;
            java.sql.ResultSet rs = null;
            
            try {
                c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
                System.out.println ("Connection established.");
            }catch (java.sql.SQLException e) {
                System.out.println ("Unable to establish a connection through the driver manager.");
            }
            
            s = c.createStatement ();
            String SQLQuery="select * from izdelek "
                    + "INNER JOIN em ON em.emid=izdelek.emid_fk "
                    + "INNER JOIN davek ON davek.davekid=izdelek.davekid_fk "
                    + "INNER JOIN cena ON cena.cenaid=izdelek.cenaid_fk "
                    + "where izdelek.naziv='"+nazivIzdelka+"';";
            System.out.println(SQLQuery);
            rs = s.executeQuery(SQLQuery);
            
            rs.next();
            
            jTextField2.setText(rs.getString("kolicina").replace('.', ','));
            jComboBox1.setSelectedItem(rs.getString("mera"));
            jTextField3.setText(rs.getString("vrednost").replace('.', ','));
            jComboBox2.setEnabled(true);
            jComboBox2.setSelectedItem(rs.getString("stopnja"));
            jComboBox2.setEnabled(false);
            
            this.cena=jTextField3.getText();
                
            c.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(PregledRacunov.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UrediIzdelek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UrediIzdelek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UrediIzdelek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UrediIzdelek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new UrediIzdelek().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
