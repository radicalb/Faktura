package faktura;

import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ItemEvent;
import java.awt.geom.Rectangle2D;
import java.awt.print.*;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author radicalb
 */
public class PregledRacunov extends javax.swing.JFrame implements Printable {

    /**
     * Creates new form PregledRacunov
     */
    public PregledRacunov() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel35 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton8 = new javax.swing.JButton();
        jComboBox9 = new javax.swing.JComboBox();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jComboBox7 = new javax.swing.JComboBox();
        jComboBox6 = new javax.swing.JComboBox();
        jTextField5 = new javax.swing.JTextField();
        jComboBox8 = new javax.swing.JComboBox();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        dateChooserCombo2 = new datechooser.beans.DateChooserCombo();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        dateChooserCombo3 = new datechooser.beans.DateChooserCombo();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField10 = new javax.swing.JTextField();

        setTitle("Pregled izdanih dokumentov");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel35.setText("vezan na dobavnico št.:");

        jTextField13.setBackground(new java.awt.Color(190, 216, 245));
        jTextField13.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jLabel34.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel34.setText("Opomba v nogi dokumenta:");

        jLabel14.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel14.setText("Davčna številka:");

        jTextField12.setBackground(new java.awt.Color(190, 216, 245));
        jTextField12.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jTextField2.setBackground(new java.awt.Color(190, 216, 245));
        jTextField2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jTextArea1.setBackground(new java.awt.Color(190, 216, 245));
        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("DDV NI ZARAČUNAN NA PODLAGI 2.TOČKE 94.ČLENA ZDDV-1");
        jScrollPane1.setViewportView(jTextArea1);

        jButton8.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jButton8.setLabel("Natisni");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jComboBox9.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "računa", "dobavnice", "predračuna" }));
        jComboBox9.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox9ItemStateChanged(evt);
            }
        });

        jTextField14.setBackground(new java.awt.Color(190, 216, 245));
        jTextField14.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jTextField15.setBackground(new java.awt.Color(190, 216, 245));
        jTextField15.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jTextField7.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jTextField7.setText("1");

        jComboBox7.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "nalagam ..." }));

        jComboBox6.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "nalagam ..." }));

        jTextField5.setBackground(new java.awt.Color(190, 216, 245));
        jTextField5.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jComboBox8.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "nalagam ..." }));

        jTextField8.setBackground(new java.awt.Color(190, 216, 245));
        jTextField8.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jTextField9.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jTextField9.setText("0");

        jComboBox2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gotovina" }));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel9.setText("Način plačila:");

        dateChooserCombo2.setCalendarPreferredSize(new java.awt.Dimension(360, 200));
        dateChooserCombo2.setFieldFont(new java.awt.Font("Ubuntu", java.awt.Font.PLAIN, 14));
        dateChooserCombo2.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

        dateChooserCombo1.setCalendarPreferredSize(new java.awt.Dimension(360, 200));
        dateChooserCombo1.setFieldFont(new java.awt.Font("Ubuntu", java.awt.Font.PLAIN, 14));
        dateChooserCombo1.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

        dateChooserCombo3.setCalendarPreferredSize(new java.awt.Dimension(360, 200));
        dateChooserCombo3.setFieldFont(new java.awt.Font("Ubuntu", java.awt.Font.PLAIN, 14));
        dateChooserCombo3.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

        jComboBox1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jTextField3.setBackground(new java.awt.Color(190, 216, 245));
        jTextField3.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jTextField4.setBackground(new java.awt.Color(190, 216, 245));
        jTextField4.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel11.setText("Naslov:");

        jCheckBox1.setText("Končni kupec");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel3.setText("Datum izdaje:");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel2.setText("Stranka:");

        jTextField1.setBackground(new java.awt.Color(190, 216, 245));
        jTextField1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel1.setText("Številka računa:");

        jLabel33.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel33.setText("0");

        jLabel32.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel32.setText("0");

        jLabel31.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel31.setText("0");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel7.setText("Sestavil:");

        jLabel30.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel30.setText("0");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel8.setText("Izpis");

        jLabel29.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel29.setText("0");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel6.setText("Kraj:");

        jLabel28.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel28.setText("Skupaj:");

        jTextField6.setBackground(new java.awt.Color(190, 216, 245));
        jTextField6.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jLabel27.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel27.setText("Znesek DDV:");

        jLabel24.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel24.setText("Skupaj brez popusta:");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel4.setText("Datum storitve:");

        jLabel26.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel26.setText("Znesek brez DDV:");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel5.setText("Datum zapadlosti:");

        jLabel25.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel25.setText("Znesek popusta:");

        jTextField11.setBackground(new java.awt.Color(190, 216, 245));
        jTextField11.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jTable2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Šifra", "Naziv", "Količina", "EM", "Cena brez DDV", "DDV(%)", "Popust(%)", "Vrednost brez DDV", "Vrednost z DDV"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jTextField10.setBackground(new java.awt.Color(190, 216, 245));
        jTextField10.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dateChooserCombo3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(134, 134, 134)
                                .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel14)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(92, 92, 92)
                                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35))
                .addGap(13, 13, 13)
                .addComponent(jCheckBox1)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateChooserCombo3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(jLabel30))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(jLabel32))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(jLabel33))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jLabel8.getAccessibleContext().setAccessibleName("Izpis");

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    public String vrstaRacuna="računa";
    public String stevilkaRacuna="2012-00001";
    
    private DefaultTableModel model;
    
    private void natisniRacun(){
        if(model.getRowCount()>0){
        //--- Create a printerJob object
            PrinterJob printJob = PrinterJob.getPrinterJob ();
            
            printJob.setJobName(jComboBox1.getSelectedItem().toString());
            int pageW=200;
            int pageH=800;        
            String printerTip="printer80mm";
            if(printerTip=="printer80mm"){
                //paper80mm
                pageW=(int)(80*2.83);
                pageH=290+(model.getRowCount()*40)+266;
            }else if(printerTip=="A4"){
                pageW=595;
                pageH=842;
            }
            
            Paper paper = new Paper();
            paper.setSize(pageW, pageH);
            paper.setImageableArea(0,0,pageW, pageH);
            PageFormat pf=new PageFormat();
            pf.setPaper(paper);
            pf.setOrientation(PageFormat.PORTRAIT);
            Book pBook = new Book();
            pBook.append(this, pf,1);
            printJob.setPageable(pBook); 
            //--- Show a print dialog to the Faktura.user. If the Faktura.user
            //--- clicks the print button, then print, otherwise
            //--- cancel the print job
            if (printJob.printDialog()) {
                try {
                    printJob.print();
                } catch (Exception PrintException) {
                    PrintException.printStackTrace();
                }
            }
        }else{
            //JOptionPane.showMessageDialog(rootPane, "Prazen račun ni mogoče izdati! Prosimo dodajte vsaj en izdelek.");
        }
    }
    
    
    private void doOnKoncniKupecSelectedChange(){
     if(jCheckBox1.isSelected()){
            jTextField1.setEnabled(false);
            jTextField4.setEnabled(false);
            jTextField2.setEnabled(false);
            jTextField13.setEnabled(false);
            jTextField14.setEnabled(false);
            jTextField15.setEnabled(false);
            dateChooserCombo2.setEnabled(false);
            dateChooserCombo3.setEnabled(false);
            jComboBox2.setSelectedItem("Gotovina");
            jComboBox2.setEnabled(false);
        }else{
            jTextField1.setEnabled(true);
            jTextField4.setEnabled(true);
            jTextField2.setEnabled(true);
            jTextField13.setEnabled(true);
            jTextField14.setEnabled(true);
            jTextField15.setEnabled(true);
            dateChooserCombo2.setEnabled(true);
            dateChooserCombo3.setEnabled(true);
            jComboBox2.setEnabled(true);
        }
    }
    
    private void setEditableToTrue(){
        jCheckBox1.setEnabled(true);
        dateChooserCombo1.setLocked(false);
        dateChooserCombo2.setLocked(false);
        dateChooserCombo3.setLocked(false);
        jTextField1.setEditable(true);
        jTextField2.setEditable(true);
        jTextField3.setEditable(true);
        jTextField4.setEditable(true);
        jTextField5.setEditable(true);
        jTextField6.setEditable(true);
        jTextField8.setEditable(true);
        jTextField10.setEditable(true);
        jTextField11.setEditable(true);
        jTextField12.setEditable(true);
        jTextField13.setEditable(true);
        jTextField14.setEditable(true);
        jTextField15.setEditable(true);
        jComboBox7.setEnabled(true);
        jComboBox8.setEnabled(true);
    }
    
    private void setEditableToFalse(){
        jCheckBox1.setEnabled(false);
        dateChooserCombo1.setLocked(true);
        dateChooserCombo2.setLocked(true);
        dateChooserCombo3.setLocked(true);
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField5.setEditable(false);
        jTextField6.setEditable(false);
        jTextField8.setEditable(false);
        jTextField10.setEditable(false);
        jTextField11.setEditable(false);
        jTextField12.setEditable(false);
        jTextField13.setEditable(false);
        jTextField14.setEditable(false);
        jTextField15.setEditable(false);
        jComboBox7.setEnabled(false);
        jComboBox8.setEnabled(false);
    }
    
    private void setAddingLineVisible(Boolean tf){
    

        jComboBox6.setVisible(tf);
        jTextField5.setVisible(tf);
        jTextField7.setVisible(tf);
        jComboBox7.setVisible(tf);
        jTextField8.setVisible(tf);
        jComboBox8.setVisible(tf);
        jTextField9.setVisible(tf);
        jTextField10.setVisible(tf);
        jTextField11.setVisible(tf);
    }
    
    private void izracunajCelotniSkupniZnesek(){
        float vrednost=0;
        float vrednostDDv=0;
        float brezPopusta=0;
        for(int i=0;i<model.getRowCount();i++){
            String vrednostBrezDDv = model.getValueAt(i, 7).toString();
            String vrednostZDdv = model.getValueAt(i, 8).toString();
            vrednost+=Float.parseFloat(vrednostBrezDDv.replace(',', '.'));
            vrednostDDv+=Float.parseFloat(vrednostZDdv.replace(',', '.'));
            brezPopusta+=(Float.parseFloat(model.getValueAt(i, 2).toString().replace(',', '.')))*(Float.parseFloat(model.getValueAt(i, 4).toString().replace(',', '.')));
        }
        
        brezPopusta=(float)Math.round(brezPopusta * 100) / 100;
        String brezPopustaS=""+brezPopusta+"00";
        brezPopustaS=brezPopustaS.substring(0, brezPopustaS.indexOf('.')+3);
        jLabel29.setText(brezPopustaS.replace('.',','));
        
        vrednost=(float)Math.round(vrednost * 100) / 100;
        String vrednostS=""+vrednost+"00";
        vrednostS=vrednostS.substring(0, vrednostS.indexOf('.')+3);
        jLabel31.setText(vrednostS.replace('.',','));
        
        float ddv=vrednostDDv-vrednost;
        ddv=(float)Math.round(ddv * 100) / 100;
        String ddvS=""+ddv+"00";
        ddvS=ddvS.substring(0, ddvS.indexOf('.')+3);
        jLabel32.setText(ddvS.replace('.',','));
        
        vrednostDDv=(float)Math.round(vrednostDDv * 100) / 100;
        String vrednostDDvS=""+vrednostDDv+"00";
        vrednostDDvS=vrednostDDvS.substring(0, vrednostDDvS.indexOf('.')+3);
        jLabel33.setText(vrednostDDvS.replace('.',','));
        
        float popust = brezPopusta-vrednost;
        popust=(float)Math.round(popust * 100) / 100;
        String popustS=""+popust+"00";
        popustS=popustS.substring(0, popustS.indexOf('.')+3);
        jLabel30.setText(popustS.replace('.',','));
        
        
    }
    
    private void izracunajSkupniZnesek(){
        setEditableToTrue();
        
        float skupaj,kolicina,cena,ddv,popust,cenaZddv,skupajBrezDdv;
        try {
            kolicina = Float.parseFloat(jTextField7.getText().replace(',', '.'));
            cena=Float.parseFloat(jTextField8.getText().replace(',', '.'));
            ddv=Float.parseFloat(jComboBox8.getSelectedItem().toString());
            popust=Float.parseFloat(jTextField9.getText().replace(',', '.'));
            
            cenaZddv=cena+(cena*ddv/100);
            if(popust==0){
                skupaj=kolicina*cenaZddv;
                skupajBrezDdv=kolicina*cena;
            }else{
                skupaj=kolicina*((cenaZddv)-(cenaZddv*popust/100));
                skupajBrezDdv=kolicina*((cena)-(cena*popust/100));
            }
            float skupajF=(float)Math.round(skupaj * 100) / 100;
            float skupajBrezDdvF=(float)Math.round(skupajBrezDdv * 100) / 100;
            String skupajS=Float.toString(skupajF)+"00";
            skupajS=skupajS.substring(0, skupajS.indexOf('.')+3);
            skupajS=skupajS.replace('.',',');
            String skupajBrezDdvS=Float.toString(skupajBrezDdvF)+"00";
            skupajBrezDdvS=skupajBrezDdvS.substring(0, skupajBrezDdvS.indexOf('.')+3);
            skupajBrezDdvS=skupajBrezDdvS.replace('.',',');
            jTextField10.setText(skupajS);
            jTextField11.setText(skupajBrezDdvS);
        }catch (Exception e) {
            Logger.getLogger(PregledRacunov.class.getName()).log(Level.SEVERE, null, e);
        }
        setEditableToFalse();
    }
    
    private boolean isNumeric(String str){
        str=str.replace(',', '.');
        try  
        {  
            Integer.parseInt(str);  
            return true;  
        }  
        catch(Exception e)  
        {  
            try  
            {  
                Float.parseFloat(str); 
                return true;  
            }  
            catch(Exception f)  
            {  
                return false;  
            }   
        }  
    }
    
    private void posodobiPodatkeOStranki(String nazivStranke){ 
        setEditableToTrue();
        try{

                java.sql.Driver d = null;
                java.sql.Connection c = null;
                java.sql.Statement s4 = null;
                java.sql.ResultSet rs4 = null;
            
                try {
                    c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
                    System.out.println ("Connection established.");
                }
                catch (java.sql.SQLException e) {
                    System.out.println ("Unable to establish a connection through the driver manager.");
                }
            
            
                s4 = c.createStatement ();
                rs4 = s4.executeQuery ("select * from stranka INNER JOIN posta ON STRANKA.POSTNAST_FK=POSTA.POSTNAST where naziv='"+nazivStranke+"'");
  
                rs4.next();
               
                String naslov=rs4.getString("naslov");
                String postnast=rs4.getString("postnast_fk");
                String posta=rs4.getString("kraj");
                String imedrzave=rs4.getString("imedrzave_fk");
                String davcnastevilka=rs4.getString("davcnastevilka");
                naloziPodatkeOStranki(nazivStranke,naslov,postnast, posta ,imedrzave,davcnastevilka);
        
                c.close();
            
            } catch (SQLException ex) {
                Logger.getLogger(PregledRacunov.class.getName()).log(Level.SEVERE, null, ex);
            }
       
    }
    
    private static String trimTrailingZeros(String number) {
        if(!number.contains(".0")) {
            return number;
        }

        return number.replaceAll(".?0*$", "");
    }
    
    private void naloziPodatkeOIzdelku(String nazivIzdelka){
        setEditableToTrue();
        
        if(!Faktura.notEmpty(nazivIzdelka)){
            jButton8.setEnabled(false);
            return;
        }
        jButton8.setEnabled(true);
        try{

                java.sql.Driver d = null;
                java.sql.Connection c = null;
                java.sql.Statement s4 = null;
                java.sql.ResultSet rs4 = null;
            
                try {
                    c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
                    System.out.println ("Connection established.");
                }
                catch (java.sql.SQLException e) {
                    System.out.println ("Unable to establish a connection through the driver manager.");
                }
            
            
                s4 = c.createStatement ();
                rs4 = s4.executeQuery ("select izdelek.izdelekid,em.mera,cena.vrednost,davek.stopnja from izdelek,em,cena,davek where (em.emid=izdelek.emid_fk) and (cena.cenaid=izdelek.cenaid_fk) and (davek.davekid=izdelek.davekid_fk) and izdelek.naziv='"+nazivIzdelka+"'");
  
                rs4.next();
                String izdelekID =rs4.getString(1);
                String emMera=rs4.getString(2);
                float cenaVrednost=rs4.getFloat(3);
                String davekStopnja=rs4.getString(4);
                
                jTextField5.setText(izdelekID);
                jComboBox7.setSelectedItem(emMera);
                jComboBox8.setSelectedItem(trimTrailingZeros(davekStopnja));
                String cenaF=String.format("%2f", cenaVrednost);
                cenaF=cenaF+"00";
                System.out.println(cenaF);
                cenaF=cenaF.substring(0, (cenaF.indexOf(",")+3));
                System.out.println(""+cenaF.indexOf(","));
                jTextField8.setText(cenaF);

                c.close();
            
            } catch (SQLException ex) {
                Logger.getLogger(PregledRacunov.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }

    
    private void naloziVse(){
        setEditableToTrue();

        DateFormat df = new SimpleDateFormat("dd.MM.yyyy"); 
        dateChooserCombo1.setDateFormat(df);
        dateChooserCombo2.setDateFormat(df);
        dateChooserCombo3.setDateFormat(df);
        
        jTextField3.setText(Faktura.uporabnikGlobal);
        
        model=new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Šifra", "Naziv", "Količina", "EM", "Cena brez DDV", "DDV(%)", "Popust(%)", "Vrednost brez DDV", "Vrednost z DDV"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
        jTable2.setModel(model);
        setAddingLineVisible(false);
            try{

                java.sql.Driver d = null;
                java.sql.Connection c = null;
                java.sql.Statement s,s5,s7,s8,s9 = null;
                java.sql.ResultSet rs,rs5,rs7,rs8,rs9 = null;
            
                try {
                    c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
                    System.out.println ("Connection established.");
                }
                catch (java.sql.SQLException e) {
                    System.out.println ("Unable to establish a connection through the driver manager.");
                }
            
                String SQLQuery="";
                s = c.createStatement ();
                if(jComboBox9.getSelectedItem()=="računa"){
                    SQLQuery=("select nakupid from nakup");
                }else if(jComboBox9.getSelectedItem()=="dobavnice"){
                    SQLQuery=("select dobavnicaid from dobavnica");
                }else if(jComboBox9.getSelectedItem()=="predračuna"){
                    SQLQuery=("select predracunid from predracun");
                }else{
                    System.out.println("Neki je narobe: PregledRacunov.java:naloziVse() if(vrstaRacuna)?");
                }
                
                rs = s.executeQuery(SQLQuery);
                jComboBox1.removeAllItems();
                if(rs.isBeforeFirst()){
                    while(rs.next()){
                        jComboBox1.addItem(rs.getString(1));
                    }
                }else{
                    return;
                }
                
                s5 = c.createStatement ();
                rs5 = s5.executeQuery ("select * from nacin_placila");
            
                jComboBox2.removeAllItems();
                while (rs5.next ()) {
                    String placilo = rs5.getString("naziv");
                    System.out.println (placilo);
                    jComboBox2.addItem(placilo);
                }
                
                s7 = c.createStatement ();
                rs7 = s7.executeQuery ("select * from davek");
            
                jComboBox8.removeAllItems();
                while (rs7.next ()) {
                    float davek = rs7.getFloat("stopnja");
                    String davekS = ""+davek;
                    System.out.println (trimTrailingZeros(davekS));
                    jComboBox8.addItem(trimTrailingZeros(davekS));
                }
            
                s8 = c.createStatement ();
                rs8 = s8.executeQuery ("select * from em");
            
                jComboBox7.removeAllItems();
                while (rs8.next()) {
                    String em = rs8.getString("mera");
                    System.out.println (em);
                    jComboBox7.addItem(em);
                }
            
                s9 = c.createStatement ();
                rs9 = s9.executeQuery ("select naziv from izdelek");
            
                jComboBox6.removeAllItems();
                rs9.next();
                String nazivPrvegaIzdelka=rs9.getString("naziv");
                jComboBox6.addItem(nazivPrvegaIzdelka);
            
                while (rs9.next()) {
                    String nazivIzdelka = rs9.getString("naziv");
                    System.out.println (nazivIzdelka);
                    jComboBox6.addItem(nazivIzdelka);
                }
            
                naloziPodatkeOIzdelku(nazivPrvegaIzdelka);
                
                c.close();
            
            } catch (SQLException ex) {
                Logger.getLogger(PregledRacunov.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        naloziPodatkeORacunu(jComboBox1.getItemAt(0).toString());
        setEditableToFalse();
        
    }
    
    private void naloziPodatkeORacunu(String stevilkaRacuna){
        setEditableToTrue();
        jCheckBox1.setSelected(false);
        doOnKoncniKupecSelectedChange();
        try{

            java.sql.Driver d = null;
            java.sql.Connection c = null;
            java.sql.Statement s,s2 = null;
            java.sql.ResultSet rs,rs2 = null;
            
            try {
                c = java.sql.DriverManager.getConnection (Faktura.databaseURL, Faktura.user, Faktura.password);
                System.out.println ("Connection established.");
            }catch (java.sql.SQLException e) {
                System.out.println ("Unable to establish a connection through the driver manager.");
            }
            
            String SQLQuery="",SQLQuery2="";
            
            s = c.createStatement ();
            if(jComboBox9.getSelectedItem()=="računa"){
                SQLQuery2=("select * from nakup "
                        + "INNER JOIN stranka ON stranka.strankaid=nakup.strankaid_fk "
                        + "INNER JOIN posta ON STRANKA.POSTNAST_FK=POSTA.POSTNAST "
                        + "INNER JOIN prodajalec ON prodajalec.prodajalecid=nakup.prodajalecid_fk "
                        + "INNER JOIN nacin_placila ON nacin_placila.nacin_placilaid=nakup.nacin_placilaid_fk "
                        + "where nakupid='"+stevilkaRacuna+"'");
                
                SQLQuery="select izdelek.naziv,nakup_izdelek.kolicina,nakup_izdelek.popust,davek.stopnja,em.mera, cena.vrednost, izdelek.izdelekid FROM nakup_izdelek "
                        + "INNER JOIN izdelek ON nakup_izdelek.izdelekid_fk=izdelek.izdelekid "
                        + "INNER JOIN davek ON izdelek.davekid_fk=davek.davekid INNER JOIN em ON em.emid=izdelek.emid_fk "
                        + "INNER JOIN cena ON cena.cenaid=izdelek.cenaid_fk "
                        + "where nakupid_fk='"+stevilkaRacuna+"'";
            }else if(jComboBox9.getSelectedItem()=="dobavnice"){
                SQLQuery2=("select * from dobavnica "
                        + "INNER JOIN stranka ON stranka.strankaid=dobavnica.strankaid_fk "
                        + "INNER JOIN posta ON STRANKA.POSTNAST_FK=POSTA.POSTNAST "
                        + "INNER JOIN prodajalec ON prodajalec.prodajalecid=dobavnica.prodajalecid_fk "
                        + "INNER JOIN nacin_placila ON nacin_placila.nacin_placilaid=dobavnica.nacin_placilaid_fk "
                        + "where dobavnicaid='"+stevilkaRacuna+"'");
                
                SQLQuery="select izdelek.naziv,dobavnica_izdelek.kolicina,dobavnica_izdelek.popust,davek.stopnja,em.mera FROM dobavnica_izdelek "
                        + "INNER JOIN izdelek ON dobavnica_izdelek.izdelekid_fk=izdelek.izdelekid "
                        + "INNER JOIN davek ON izdelek.davekid_fk=davek.davekid INNER JOIN em ON em.emid=izdelek.emid_fk "
                        + "where dobavnicaid_fk='"+stevilkaRacuna+"'";
            }else if(jComboBox9.getSelectedItem()=="predračuna"){
                SQLQuery2=("select * from predracun "
                        + "INNER JOIN stranka ON stranka.strankaid=predracun.strankaid_fk "
                        + "INNER JOIN posta ON STRANKA.POSTNAST_FK=POSTA.POSTNAST "
                        + "INNER JOIN prodajalec ON prodajalec.prodajalecid=predracun.prodajalecid_fk "
                        + "INNER JOIN nacin_placila ON nacin_placila.nacin_placilaid=predracun.nacin_placilaid_fk "
                        + "where predracunid='"+stevilkaRacuna+"'");
                
                SQLQuery="select izdelek.naziv,predracun_izdelek.kolicina,predracun_izdelek.popust,davek.stopnja,em.mera FROM predracun_izdelek "
                        + "INNER JOIN izdelek ON predracun_izdelek.izdelekid_fk=izdelek.izdelekid "
                        + "INNER JOIN davek ON izdelek.davekid_fk=davek.davekid INNER JOIN em ON em.emid=izdelek.emid_fk "
                        + "where predracunid_fk='"+stevilkaRacuna+"'";
            }
            rs = s.executeQuery(SQLQuery2);
            System.out.println(stevilkaRacuna);
            rs.next();
            naloziPodatkeOStranki(rs.getString("naziv"),rs.getString("naslov"),rs.getString("postnast"),rs.getString("kraj"),rs.getString("imedrzave_fk"),rs.getString("davcnastevilka"));
            
            System.out.println("9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999");
            System.out.println(rs.getString("dan")+"."+rs.getString("mesecid_fk")+"."+rs.getString("leto"));
            dateChooserCombo1.setText(rs.getString("dan")+"."+rs.getString("mesecid_fk")+"."+rs.getString("leto"));
            dateChooserCombo2.setText(rs.getString("storitevdan")+"."+rs.getString("storitevmesecid_fk")+"."+rs.getString("storitevleto"));
            dateChooserCombo3.setText(rs.getString("zapadlostdan")+"."+rs.getString("zapadlostmesecid_fk")+"."+rs.getString("zapadlostleto"));
            jTextField6.setText(rs.getString("kraj"));
            jTextField3.setText(rs.getString("ime"));
            jComboBox2.setSelectedItem(rs.getString("naziv"));
            
            if(rs.getInt("strankaid")==0){
                jCheckBox1.setSelected(true);
                doOnKoncniKupecSelectedChange();
            }
            
            s2 = c.createStatement ();
            System.out.println(SQLQuery);
            rs2 = s2.executeQuery (SQLQuery);
  
            while(model.getRowCount()>0){
                model.removeRow(0);
            }
            
            while(rs2.next()){     
                jTextField5.setText(rs2.getString("izdelekid"));
                jComboBox6.setSelectedItem(rs2.getString("naziv"));
                jTextField7.setText(rs2.getString("kolicina"));
                jTextField8.setText(rs2.getString("vrednost"));
                jTextField9.setText(rs2.getString("popust"));
                jComboBox7.setSelectedItem(rs2.getString("mera"));
                String stopnja=""+rs2.getFloat("stopnja");
                jComboBox8.setSelectedItem(trimTrailingZeros(stopnja));
                izracunajSkupniZnesek();
                model.insertRow(jTable2.getRowCount(),new String[]{jTextField5.getText(),jComboBox6.getSelectedItem().toString(),jTextField7.getText(),jComboBox7.getSelectedItem().toString(),jTextField8.getText(),jComboBox8.getSelectedItem().toString(),jTextField9.getText(),jTextField11.getText(),jTextField10.getText()});      
            }
            
            
            c.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(PregledRacunov.class.getName()).log(Level.SEVERE, null, ex);
        } 
        izracunajCelotniSkupniZnesek();
        setEditableToFalse();
    }
    
    private void naloziPodatkeOStranki(String naziv, String naslov, String postnast, String posta, String imedrzave, String davcnastevilka){
        setEditableToTrue();
        jTextField1.setText(naziv);
        jTextField4.setText(naslov);
        jTextField13.setText(postnast);
        jTextField14.setText(posta);
        jTextField15.setText(imedrzave);
        jTextField2.setText(davcnastevilka);
        
        
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setLocationRelativeTo(null); //centriram okno
        
        naloziVse();
               
    }//GEN-LAST:event_formWindowOpened

    private void jComboBox9ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox9ItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            naloziVse();
        }
    }//GEN-LAST:event_jComboBox9ItemStateChanged

    private void jTextField9InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField9InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9InputMethodTextChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        doOnKoncniKupecSelectedChange();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if ((evt.getStateChange() == ItemEvent.SELECTED) && (!(jTextField8.getText().isEmpty()))) {
            naloziPodatkeORacunu(jComboBox1.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:

        natisniRacun();
    }//GEN-LAST:event_jButton8ActionPerformed

    //@Override
    public int print (Graphics graphics, PageFormat pageFormat, int pageIndex) {
        
        if (pageIndex > 0) { /* We have only one page, and 'page' is zero-based */
            return NO_SUCH_PAGE;
        }
        
        Font fN = new Font("SansSerif", Font.PLAIN, 10);
        Font fBtitle = new Font("SansSerif", Font.BOLD, 16);
        
        
        Graphics2D graphics2D = (Graphics2D) graphics;
        graphics.setFont(fN);
        FontMetrics fNm = graphics.getFontMetrics(fN);
        //595-50-fNm.stringWidth("Vinogradnik")
        
        String printerTip="printer80mm";
        if(printerTip=="A4"){
        
            graphics2D.drawString("Vinogradnik", 595-50-fNm.stringWidth("Davčna številka: 27273881"), 45);
            graphics2D.drawString("Žarn Jožef s.p.", 595-50-fNm.stringWidth("Davčna številka: 27273881"), 60);
            graphics2D.drawString("Gorjanska cesta 17", 595-50-fNm.stringWidth("Davčna številka: 27273881"), 75);
            graphics2D.drawString("8311 Kostanjevica na Krki", 595-50-fNm.stringWidth("Davčna številka: 27273881"), 90);
            graphics2D.drawString("Davčna številka: 27273881", 595-50-fNm.stringWidth("Davčna številka: 27273881"), 105);
        
            graphics2D.drawLine(20, 115, 595-20, 115);
            graphics2D.drawLine(20, 116, 595-20, 116);
        
            graphics.setFont(new Font("SansSerif", Font.BOLD, 10));
            graphics2D.drawString("Kupec:", 50, 130);
            graphics.setFont(fN);
        
            if(jCheckBox1.isSelected()){
                graphics2D.drawString("Končni kupec", 50, 155);
            }else{
                graphics2D.drawString(jTextField1.getText(), 50, 155);
                graphics2D.drawString(jTextField4.getText(), 50, 170);
                graphics2D.drawString(jTextField13.getText()+" "+jTextField14.getText(), 50, 185);
                graphics2D.drawString(jTextField15.getText(), 50, 200);
                graphics2D.drawString("Davčna številka: "+jTextField2.getText(), 50, 215);
            }
        
            graphics.setFont(fBtitle);
            if(jComboBox9.getSelectedItem().toString()=="računa"){
                //graphics2D.drawString("RAČUN št.: "+jComboBox1.getSelectedItem().toString(), 330, 140);
                graphics2D.drawString("RAČUN št.: "+jComboBox1.getSelectedItem().toString(), 330, 140);
            }else if(jComboBox9.getSelectedItem().toString()=="dobavnice"){
                graphics2D.drawString("DOBAVNICA št.: "+jComboBox1.getSelectedItem().toString(), 330, 140);
            }else if(jComboBox9.getSelectedItem().toString()=="predračuna"){
                graphics2D.drawString("PREDRAČUN št.: "+jComboBox1.getSelectedItem().toString(), 330, 140);
            }
            graphics.setFont(fN);
            graphics2D.drawString("Kraj izdaje:", 330, 170);
            graphics2D.drawString("Datum izdaje:", 330, 185);
            graphics2D.drawString("Datum storitve:", 330, 200);
            graphics2D.drawString("Rok plačila:", 330, 215);
            graphics2D.drawString("Prodajalec/ka:", 330, 230);
            graphics2D.drawString("Način plačila:", 330, 245);
  
            graphics2D.drawString(jTextField6.getText(), 420, 170);
            graphics2D.drawString(dateChooserCombo1.getText(), 420, 185);
            graphics2D.drawString(dateChooserCombo1.getText(), 420, 200);
            graphics2D.drawString(dateChooserCombo1.getText(), 420, 215);
            graphics2D.drawString(jTextField3.getText(), 420, 230);
            graphics2D.drawString(jComboBox2.getSelectedItem().toString(), 420, 245);
            graphics2D.drawLine(50, 240+30, 595-50, 240+30);
        
            graphics2D.drawString("Šifra", 50, 255+30);
            graphics2D.drawString("Naziv", 100, 255+30);
            graphics2D.drawString("Količina", 205, 255+30);
            graphics2D.drawString("EM", 255, 255+30);
            graphics2D.drawString("Cena", 295, 255+30);
            graphics2D.drawString("DDV", 345, 255+30);
            graphics2D.drawString("Popust", 385, 255+30);
            graphics2D.drawString("Vrednost", 435, 255+30);
            graphics2D.drawString("Vrednost", 595-50-fNm.stringWidth("Vrednost"), 255+30);
        
        
            graphics2D.drawString("%", 345+(fNm.stringWidth("DDV")/2)-1, 270+30);
            graphics2D.drawString("%", 385+(fNm.stringWidth("Popust")/2)-1, 270+30);
            graphics2D.drawString("brez DDV", 435, 270+30);
            graphics2D.drawString("z DDV", 595-50-(fNm.stringWidth("Vrednost")), 270+30);
            graphics2D.drawLine(50, 275+30, 595-50, 275+30);
        
            int h1=290+30;
            int i;
            for(i=0;i<model.getRowCount();i++){           
                graphics2D.drawString(model.getValueAt(i, 0).toString(), 50, h1+(i*15));
                graphics2D.drawString(model.getValueAt(i, 1).toString(), 100, h1+(i*15));
                graphics2D.drawString(model.getValueAt(i, 2).toString(), 205, h1+(i*15));
                graphics2D.drawString(model.getValueAt(i, 3).toString(), 255, h1+(i*15));
                graphics2D.drawString(model.getValueAt(i, 4).toString(), 295, h1+(i*15));
                graphics2D.drawString(model.getValueAt(i, 5).toString(), 345, h1+(i*15));
                graphics2D.drawString(model.getValueAt(i, 6).toString(), 385, h1+(i*15));
                graphics2D.drawString(model.getValueAt(i, 7).toString(), 435, h1+(i*15));
                graphics2D.drawString(model.getValueAt(i, 8).toString(), 595-50-fNm.stringWidth("Vrednost"), h1+(i*15));    
            }
            graphics2D.drawLine(50, h1+(i*15)-5, 595-50, h1+(i*15)-5);
            int h2=h1+(i*15)+15;
        
            graphics2D.drawString("Skupaj brez popusta:", 350, h2);
            graphics2D.drawString("Znesek popusta:", 350, h2+15);
            graphics2D.drawString("Osnova za DDV:", 350, h2+30);
            graphics2D.drawString("Znesek DDV:", 350, h2+45);
            graphics.setFont(new Font("SansSerif", Font.BOLD, 10));
            graphics2D.drawString("Skupaj:", 350, h2+60);
            graphics.setFont(fN);
        
            graphics2D.drawString(jLabel29.getText(), 595-50-fNm.stringWidth(jLabel29.getText()), h2);
            graphics2D.drawString(jLabel30.getText(), 595-50-fNm.stringWidth(jLabel30.getText()), h2+15);
            graphics2D.drawString(jLabel31.getText(), 595-50-fNm.stringWidth(jLabel31.getText()), h2+30);
            graphics2D.drawString(jLabel32.getText(), 595-50-fNm.stringWidth(jLabel32.getText()), h2+45);
            graphics.setFont(new Font("SansSerif", Font.BOLD, 10));
            graphics2D.drawString(jLabel33.getText(), 595-50-fNm.stringWidth(jLabel33.getText()), h2+60);
            graphics.setFont(fN);
        
            graphics2D.drawString(jTextArea1.getText(), 50, h2+60+100);

        }else if(printerTip=="printer80mm"){
            
            int sirinaPmm=80;
            int sirinaPpx=(int)(sirinaPmm*2.83);
            
            int h1=30;
            graphics2D.drawString("Vinogradnik", 10, h1);
            graphics2D.drawString("Žarn Jožef s.p.", 10, h1+=15);
            graphics2D.drawString("Gorjanska cesta 17",10, h1+=15);
            graphics2D.drawString("8311 Kostanjevica na Krki", 10, h1+=15);
            graphics2D.drawString("Davčna številka: 27273881", 10, h1+=15);
            graphics2D.drawLine(5, h1+=10, sirinaPpx-5, h1);
            
            if(jComboBox9.getSelectedItem().toString()=="računa"){
                graphics2D.drawString("RAČUN št.: "+jComboBox1.getSelectedItem().toString(), 10, h1+=25);
            }else if(jComboBox9.getSelectedItem().toString()=="dobavnice"){
                graphics2D.drawString("DOBAVNICA št.: "+jComboBox1.getSelectedItem().toString(), 10, h1+=25);
            }else if(jComboBox9.getSelectedItem().toString()=="predračuna"){
                graphics2D.drawString("PREDRAČUN št.: "+jComboBox1.getSelectedItem().toString(), 10, h1+=25);
            }
            
            graphics2D.drawString("Kraj izdaje: "+jTextField6.getText(), 10, h1+=15);
            graphics2D.drawString("Datum izdaje: "+dateChooserCombo1.getText(), 10, h1+=15);
            graphics2D.drawString("Datum storitve: "+dateChooserCombo2.getText(), 10, h1+=15);
            graphics2D.drawString("Rok plačila: "+dateChooserCombo3.getText(), 10, h1+=15);
            graphics2D.drawString("Prodajalec/ka: "+jTextField3.getText(), 10, h1+=15);
            graphics2D.drawString("Način plačila: "+jComboBox2.getSelectedItem().toString(), 10, h1+=15);
            if(jComboBox9.getSelectedItem().toString()=="računa"){
                if(jTextField12.getText().isEmpty()){
                    graphics2D.drawString("Veza na dobavnico št.: /", 10, h1+=15);
                }else{
                    graphics2D.drawString("Veza na dobavnico št.: "+jTextField12.getText(), 10, h1+=15);
                }
            }
            //graphics2D.drawLine(5, 225, sirinaPpx-5, 225);
            h1+=25;
            graphics2D.drawString("Šifra", 10, h1);
            graphics2D.drawString("Kol.", 50, h1);
            graphics2D.drawString("EM", 90, h1);
            graphics2D.drawString("Cena", 120, h1);
            graphics2D.drawString("brez DDV", 162, h1);
            h1+=15;
            graphics2D.drawString("Naziv", 10, h1);
            graphics2D.drawString("DDV", 80, h1);
            graphics2D.drawString("Popust", 121, h1);
            graphics2D.drawString("z DDV", 162, h1);
            
            graphics2D.drawLine(10, h1+=10, sirinaPpx-10, h1);
            
            
            h1+=10;//290
            int i;
            for(i=0;i<model.getRowCount();i++){           
                graphics2D.drawString(model.getValueAt(i, 0).toString(), 10, h1+15);
                graphics2D.drawString(model.getValueAt(i, 2).toString(), 50, h1+15);
                graphics2D.drawString(model.getValueAt(i, 3).toString(), 90, h1+15);
                graphics2D.drawString(model.getValueAt(i, 4).toString(), 120, h1+15);
                graphics2D.drawString(model.getValueAt(i, 7).toString(), 162, h1+15);                
                
                if(model.getValueAt(i, 1).toString().length()>12){
                    graphics2D.drawString(model.getValueAt(i, 1).toString().substring(0,11)+".", 10, h1+30);
                }else{
                    graphics2D.drawString(model.getValueAt(i, 1).toString(), 10, h1+30);
                }
                graphics2D.drawString(model.getValueAt(i, 5).toString()+"%", 80, h1+30);
                graphics2D.drawString(model.getValueAt(i, 6).toString()+"%", 121, h1+30);
                graphics2D.drawString(model.getValueAt(i, 8).toString(), 162, h1+30);  
                
                //graphics2D.drawLine(5, h1+35, sirinaPpx-5, h1+35);
                
                h1+=40;
            }
            graphics2D.drawLine(10, h1-5, sirinaPpx-10, h1-5);
            
            graphics2D.drawString("Skupaj brez popusta:", 10, h1+15);
            graphics2D.drawString("Znesek popusta:", 10, h1+30);
            graphics2D.drawString("Znesek brez DDV:", 10, h1+45);
            graphics2D.drawString("Znesek DDV:", 10, h1+60);
            graphics.setFont(new Font("SansSerif", Font.BOLD, 10));
            graphics2D.drawString("Skupaj:", 10, h1+75);
            graphics.setFont(fN);
            
            graphics2D.drawString(jLabel29.getText(), 162, h1+15);
            graphics2D.drawString(jLabel30.getText(), 162, h1+30);
            graphics2D.drawString(jLabel31.getText(), 162, h1+45);
            graphics2D.drawString(jLabel32.getText(), 162, h1+60);
            graphics.setFont(new Font("SansSerif", Font.BOLD, 10));
            graphics2D.drawString(jLabel33.getText(), 162, h1+75);
            graphics.setFont(fN);
            
            h1+=75;
            graphics2D.drawString("Kupec:", 10, h1+=30);
            if(jCheckBox1.isSelected()){
                graphics2D.drawString("Končni kupec", 10, h1+=15);
                h1+=60;
            }else{
                graphics2D.drawString(jTextField1.getText(), 10, h1+=15);
                graphics2D.drawString(jTextField4.getText(), 10, h1+=15);
                graphics2D.drawString(jTextField13.getText()+" "+jTextField14.getText(), 10, h1+=15);
                graphics2D.drawString(jTextField15.getText(), 10, h1+=15);
                graphics2D.drawString("Davčna številka: "+jTextField2.getText(), 10, h1+=15);
            }
            
            graphics2D.drawString(jTextArea1.getText().substring(0, 27), 10, h1+=40);
            graphics2D.drawString(jTextArea1.getText().substring(28, jTextArea1.getText().length()), 10, h1+=15);
            
            h1=290+(model.getRowCount()*40)+265;
            graphics2D.drawLine(0, h1, sirinaPpx, h1);

        }
        
            
        return (PAGE_EXISTS);
   }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PregledRacunov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PregledRacunov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PregledRacunov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PregledRacunov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PregledRacunov().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private datechooser.beans.DateChooserCombo dateChooserCombo2;
    private datechooser.beans.DateChooserCombo dateChooserCombo3;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
